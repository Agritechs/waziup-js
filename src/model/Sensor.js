/**
 * WAZIUP API
 * Applications API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Location', 'model/Measurement'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Location'), require('./Measurement'));
  } else {
    // Browser globals (root is window)
    if (!root.WaziupApi) {
      root.WaziupApi = {};
    }
    root.WaziupApi.Sensor = factory(root.WaziupApi.ApiClient, root.WaziupApi.Location, root.WaziupApi.Measurement);
  }
}(this, function(ApiClient, Location, Measurement) {
  'use strict';




  /**
   * The Sensor model module.
   * @module model/Sensor
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Sensor</code>.
   * @alias module:model/Sensor
   * @class
   * @param id {String} Unique ID of the sensor node
   */
  var exports = function(id) {
    var _this = this;

    _this['id'] = id;





  };

  /**
   * Constructs a <code>Sensor</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Sensor} obj Optional instance to populate.
   * @return {module:model/Sensor} The populated <code>Sensor</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('gateway_id')) {
        obj['gateway_id'] = ApiClient.convertToType(data['gateway_id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('owner')) {
        obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
      }
      if (data.hasOwnProperty('measurements')) {
        obj['measurements'] = ApiClient.convertToType(data['measurements'], [Measurement]);
      }
      if (data.hasOwnProperty('location')) {
        obj['location'] = Location.constructFromObject(data['location']);
      }
      if (data.hasOwnProperty('dateCreated')) {
        obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'String');
      }
      if (data.hasOwnProperty('dateModified')) {
        obj['dateModified'] = ApiClient.convertToType(data['dateModified'], 'String');
      }
      if (data.hasOwnProperty('domain')) {
        obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
      }
    }
    return obj;
  }

  /**
   * Unique ID of the sensor node
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Unique ID of the gateway
   * @member {String} gateway_id
   */
  exports.prototype['gateway_id'] = undefined;
  /**
   * name of the sensor node
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * owner of the sensor node
   * @member {String} owner
   */
  exports.prototype['owner'] = undefined;
  /**
   * @member {Array.<module:model/Measurement>} measurements
   */
  exports.prototype['measurements'] = undefined;
  /**
   * @member {module:model/Location} location
   */
  exports.prototype['location'] = undefined;
  /**
   * date at which the sensor has been modified
   * @member {String} dateModified
   */
  exports.prototype['dateModified'] = undefined;
  /**
   * date at which the sensor has been created
   * @member {String} dateCreated
   */
  exports.prototype['dateCreated'] = undefined;
  /**
   * domain of the sensor
   * @member {String} domain
   */
  exports.prototype['domain'] = undefined;



  return exports;
}));


